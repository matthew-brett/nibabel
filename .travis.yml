# vim ft=yaml
# Multiple lines can be made a single "virtual line" because of how Travis
# munges each line before executing it to print out the exit status.  It's okay
# for it to be on multiple physical lines, so long as you remember: - There
# can't be any leading "-"s - All newlines will be removed, so use ";"s

language: python

# Run jobs on container-based infrastructure, can be overridden per job
sudo: false

cache:
  directories:
    - $HOME/.cache/pip
addons:
  apt:
    packages:
      - libhdf5-serial-dev
      # For numpy --pre wheels
      - libatlas-base-dev
env:
    global:
        - DEPENDS="numpy scipy matplotlib h5py"
        - PYDICOM=1
python:
    - 2.6
    - 3.3
    - 3.4
    - 3.5
matrix:
  include:
    - python: 2.7
      env:
        - COVERAGE=1
    # Absolute minimum dependencies
    - python: 2.7
      env:
        - DEPENDS=numpy==1.5.1 PYDICOM=0
    # Minimum pydicom dependency
    - python: 2.7
      env:
        - DEPENDS="numpy==1.5.1 pydicom==0.9.7"
    # pydicom 1.0 (currently unreleased)
    - python: 2.7
      env:
        - PYDICOM="v1.0"
    # test against pre-release builds
    - python: 2.7
      env:
        - EXTRA_PIP_FLAGS="--pre"
    # Documentation doctests
    - python: 2.7
      env:
        - DOC_DOC_TEST=1
    # Setup.py install
    - python: 2.7
      env:
        - INSTALL_TYPE=setup
    - python: 2.7
      env:
        - INSTALL_TYPE=sdist
        - DEPENDS="numpy==1.5.1"
    - python: 2.7
      env:
        - INSTALL_TYPE=wheel
        - DEPENDS="numpy==1.5.1"
    - python: 2.7
      env:
        - INSTALL_TYPE=requirements
        - DEPENDS=
    - python: 2.7
      env:
        - STYLE=1
    - python: 3.5
      env:
        - STYLE=1
before_install:
    - source travis-tools/utils.sh
    - travis_before_install
    - pip install flake8
    # pydicom <= 0.9.8 doesn't install on python 3
    - if [ "${TRAVIS_PYTHON_VERSION:0:1}" == "2" ]; then
        if [ "$PYDICOM" == "1" ]; then
            pip install pydicom;
        elif [ "$PYDICOM" == "v1.0" ]; then
            pip install git+https://github.com/darcymason/pydicom.git@43f278444d5cb2e4648135d3edcd430c363c6975;
        fi
      fi
# command to install dependencies
install:
    - travis_install $INSTALL_TYPE
    # Point to nibabel data directory
    - export NIBABEL_DATA_DIR="$PWD/nibabel-data"
# command to run tests, e.g. python setup.py test
script:
    - |
      if [ "${STYLE}" == "1" ]; then
          # Run styles only on core nibabel code.
          flake8 nibabel
      else
          # Change into an innocuous directory and find tests from installation
          mkdir for_testing
          cd for_testing
          if [ "${COVERAGE}" == "1" ]; then
              cp ../.coveragerc .;
              COVER_ARGS="--with-coverage --cover-package nibabel";
          fi
          if [ "$DOC_DOC_TEST" == "1" ]; then
              pip install sphinx numpydoc texext;
              cd ../doc;
              make html;
              make doctest;
          else
              pip install nose
              nosetests --with-doctest $COVER_ARGS nibabel;
          fi
      fi
after_success:
    - if [ "${COVERAGE}" == "1" ]; then coveralls; fi

notifications:
    webhooks: http://nipy.bic.berkeley.edu:54856/travis
